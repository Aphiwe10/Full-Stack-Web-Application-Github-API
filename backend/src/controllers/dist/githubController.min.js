"use strict";var axios=require("axios"),GITHUB_API_BASE_URL="https://api.github.com",searchUsers=function(r,t,a){var s,n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(s=r.query.q,e.prev=1,s){e.next=4;break}return e.abrupt("return",t.status(400).json({error:"Query parameter 'q' is required."}));case 4:return e.next=6,regeneratorRuntime.awrap(axios.get("".concat(GITHUB_API_BASE_URL,"/search/users"),{headers:{Authorization:"Bearer ".concat(process.env.GITHUB_TOKEN)},params:{q:s}}));case 6:n=e.sent,t.status(200).json(n.data),e.next=13;break;case 10:e.prev=10,e.t0=e.catch(1),a(e.t0);case 13:case"end":return e.stop()}},null,null,[[1,10]])},getUserDetails=function(r,t,a){var s,n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return s=r.params.username,e.prev=1,e.next=4,regeneratorRuntime.awrap(axios.get("".concat(GITHUB_API_BASE_URL,"/users/").concat(s),{headers:{Authorization:"Bearer ".concat(process.env.GITHUB_TOKEN)}}));case 4:n=e.sent,t.status(200).json(n.data),e.next=13;break;case 8:if(e.prev=8,e.t0=e.catch(1),e.t0.response&&404===e.t0.response.status)return e.abrupt("return",t.status(404).json({error:"User not found"}));e.next=12;break;case 12:a(e.t0);case 13:case"end":return e.stop()}},null,null,[[1,8]])},getUserRepos=function(r,t,a){var s,n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return s=r.params.username,e.prev=1,e.next=4,regeneratorRuntime.awrap(axios.get("".concat(GITHUB_API_BASE_URL,"/users/").concat(s,"/repos"),{headers:{Authorization:"Bearer ".concat(process.env.GITHUB_TOKEN)},params:{sort:"updated",per_page:50}}));case 4:n=e.sent,t.status(200).json(n.data),e.next=11;break;case 8:e.prev=8,e.t0=e.catch(1),a(e.t0);case 11:case"end":return e.stop()}},null,null,[[1,8]])},getRepoCommits=function(r,t,a){var s,n,o,c;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(s=r.query,n=s.owner,o=s.repo,n&&o){e.next=3;break}return e.abrupt("return",t.status(400).json({error:"Owner and repo parameters are required."}));case 3:return e.prev=3,e.next=6,regeneratorRuntime.awrap(axios.get("".concat(GITHUB_API_BASE_URL,"/repos/").concat(n,"/").concat(o,"/commits"),{headers:{Authorization:"Bearer ".concat(process.env.GITHUB_TOKEN)},params:{per_page:5}}));case 6:c=e.sent,t.status(200).json(c.data),e.next=13;break;case 10:e.prev=10,e.t0=e.catch(3),a(e.t0);case 13:case"end":return e.stop()}},null,null,[[3,10]])};module.exports={searchUsers:searchUsers,getUserDetails:getUserDetails,getUserRepos:getUserRepos,getRepoCommits:getRepoCommits};
//# sourceMappingURL=githubController.min.js.map
