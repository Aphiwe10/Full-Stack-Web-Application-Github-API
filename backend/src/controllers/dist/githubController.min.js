"use strict";var axios=require("axios"),GITHUB_API_BASE_URL="https://api.github.com",searchUsers=function(r,t,a){var s,n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(s=r.query.q,e.prev=1,s){e.next=4;break}return e.abrupt("return",t.status(400).json({error:"Query parameter 'q' is required."}));case 4:return e.next=6,regeneratorRuntime.awrap(axios.get("".concat(GITHUB_API_BASE_URL,"/search/users"),{headers:{Authorization:"Bearer ".concat(process.env.GITHUB_TOKEN)},params:{q:s}}));case 6:n=e.sent,t.status(200).json(n.data),e.next=13;break;case 10:e.prev=10,e.t0=e.catch(1),a(e.t0);case 13:case"end":return e.stop()}},null,null,[[1,10]])},getUserDetails=function(r,t,a){var s,n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return s=r.params.username,e.prev=1,e.next=4,regeneratorRuntime.awrap(axios.get("".concat(GITHUB_API_BASE_URL,"/users/").concat(s),{headers:{Authorization:"Bearer ".concat(process.env.GITHUB_TOKEN)}}));case 4:n=e.sent,t.status(200).json(n.data),e.next=11;break;case 8:e.prev=8,e.t0=e.catch(1),a(e.t0);case 11:case"end":return e.stop()}},null,null,[[1,8]])};module.exports={searchUsers:searchUsers,getUserDetails:getUserDetails};
//# sourceMappingURL=githubController.min.js.map
